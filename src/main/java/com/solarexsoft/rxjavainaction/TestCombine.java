package com.solarexsoft.rxjavainaction;import io.reactivex.Single;import io.reactivex.functions.BiFunction;import io.reactivex.functions.Consumer;import java.util.concurrent.TimeUnit;/** * Created by Solarex on 2020/4/22/6:57 PM * Desc: */public class TestCombine {    public static void main(String[] args) {        Single<Integer> first = Single.just(111).delay(1000, TimeUnit.MILLISECONDS);        Single<Object> second = Single.just(new Object()).delay(2000, TimeUnit.MILLISECONDS);        Single.zip(first, second, new BiFunction<Integer, Object, Integer>() {            @Override            public Integer apply(Integer integer, Object o) throws Exception {                return integer;            }        }).subscribe(new Consumer<Integer>() {            @Override            public void accept(Integer integer) throws Exception {                System.out.println(integer);            }        }, new Consumer<Throwable>() {            @Override            public void accept(Throwable throwable) throws Exception {                throwable.printStackTrace();            }        });    }}